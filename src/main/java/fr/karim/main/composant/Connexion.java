/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fr.karim.main.composant;

import com.karimandco.auth.Cryptage;
import com.karimandco.auth.PanneauChamp;
import fr.karim.connexion.DaoSIO;
import fr.karim.main.auth.PanelPassword;
import fr.karim.main.utils.Helpers;
import fr.karim.main.utils.Utilisateur;
import java.awt.Color;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author karim
 */
public class Connexion extends javax.swing.JPanel {

    JDialogInscription inscriptionDialog;
    
    /**
     * Creates new form Connexion
     */
    public Connexion() {
        initComponents();
        panelPassword1.setBackground(Color.WHITE);
        panneauChamp1.setBackground(Color.WHITE);
        
        panneauChamp1.getChamp2().setBackground(Color.WHITE);
        panneauChamp1.getChamp2().setCaretColor(Color.BLACK);
        panneauChamp1.getChamp2().setForeground(new Color(25, 28, 32));
        
        panneauChamp1.getjLabelNomChamp().setText("Identifiant ou Email");
        panneauChamp1.getjLabelNomChamp().setForeground(new Color(25, 28, 32));
        
        panneauChamp1.getjSeparator1().setBackground(new Color(25, 28, 32));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panneauChamp1 = new com.karimandco.auth.PanneauChamp();
        panelPassword1 = new fr.karim.main.auth.PanelPassword();
        jButtonConnexion = new javax.swing.JButton();
        jButtonSinscrire = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jButtonConnexion.setText("Connexion");
        jButtonConnexion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonConnexionMouseClicked(evt);
            }
        });

        jButtonSinscrire.setText("S'inscrire");
        jButtonSinscrire.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSinscrireMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(25, 28, 32));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Se Connecter");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panneauChamp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonConnexion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonSinscrire, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panneauChamp1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonConnexion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSinscrire)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSinscrireMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSinscrireMouseClicked
        inscriptionDialog = new JDialogInscription();
        inscriptionDialog.setModal(true);
        inscriptionDialog.setVisible(true);
    }//GEN-LAST:event_jButtonSinscrireMouseClicked

    private void jButtonConnexionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonConnexionMouseClicked
        connexion();
    }//GEN-LAST:event_jButtonConnexionMouseClicked

    private void connexion(){
        
        String passText = String.valueOf(this.panelPassword1.getjPasswordField1().getPassword());
        List<Map<String, Object>> res;
        
        if(passText.length() == 6){
            String identifiable = panneauChamp1.getChamp2().getText();
            String pass = Cryptage.sha256(Cryptage.sha256(passText));
            
            if(!identifiable.equals("") && !pass.equals("")){
                
                try {
                    res = Helpers.getIntance().resultSetToList(DaoSIO.getInstance().requeteSelection("SELECT * FROM utilisateurs WHERE ( identifiant = '" + identifiable + "' OR courriel = '" + identifiable + "' ) AND mot_de_passe='" + pass + "'"));
                    
                    if(res.size() > 0){
                        
                        Utilisateur.getInstance().setEstConnecte(Utilisateur.getInstance().loadDataUser(res.get(0)));
                        
                    }else{
                        JOptionPane.showMessageDialog(this, "Identifiant/Email ou Mot de passe incorrect.", "Echec de la connexion", JOptionPane.WARNING_MESSAGE);
                    }
                
                } catch (SQLException ex) {
                    Logger.getLogger(Connexion.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
            }
        }else{
            JOptionPane.showMessageDialog(this, "La longueur de votre mot de passe est trop court.", "Mot de passe trop court", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    public JButton getjButtonConnexion() {
        return jButtonConnexion;
    }

    public PanelPassword getPanelPassword1() {
        return panelPassword1;
    }

    public PanneauChamp getPanneauChamp1() {
        return panneauChamp1;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConnexion;
    private javax.swing.JButton jButtonSinscrire;
    private javax.swing.JLabel jLabel1;
    private fr.karim.main.auth.PanelPassword panelPassword1;
    private com.karimandco.auth.PanneauChamp panneauChamp1;
    // End of variables declaration//GEN-END:variables
}
