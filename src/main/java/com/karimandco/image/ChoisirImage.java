/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.karimandco.image;

import com.karimandco.auth.Utilisateur;
import fr.karim.main.utils.Helpers;
import java.awt.Color;
import javax.swing.*;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

import fr.karim.references.Message;
import org.apache.commons.io.FilenameUtils;

/**
 *
 * @author metac
 */
public class ChoisirImage extends javax.swing.JPanel {

    /**
     * Creates new form ChoisirImage
     */
    JFileChooser fichier;
    Integer idUtlisateur = null;

    private JFrame frame;

    public ChoisirImage() {
        initComponents();
        init();
    }

    public ChoisirImage(JFrame frame) {
        initComponents();
        this.frame = frame;
        init();
    }

    public void init() {
        fichier = new JFileChooser();
        FileFilter filter = new FileNameExtensionFilter("Images Uniquement", "jpg", "bmp", "jpeg", "png");
        fichier.setFileFilter(filter);
    }

    public Integer getIdUtlisateur() {
        return idUtlisateur;
    }

    public void setIdUtlisateur(Integer idUtlisateur) {
        this.idUtlisateur = idUtlisateur;
    }

    public JFrame getFrame() {
        return frame;
    }

    public void setFrame(JFrame frame) {
        this.frame = frame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonSelectFile = new javax.swing.JButton();
        jLabelSuccess = new javax.swing.JLabel();
        jLabelSelect = new javax.swing.JLabel();
        showImage1 = new com.karimandco.image.ShowImage();

        jButtonSelectFile.setText("Choisir l'image");
        jButtonSelectFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSelectFileMouseClicked(evt);
            }
        });

        jLabelSuccess.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSuccess.setText("...");

        jLabelSelect.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSelect.setText("Aucun fichier sélectionné");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelSelect)
                    .addComponent(jButtonSelectFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelSuccess)
                    .addComponent(showImage1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(showImage1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSelectFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelSuccess)
                .addGap(10, 10, 10))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSelectFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSelectFileMouseClicked
        int returnval = fichier.showOpenDialog(this);
        if (returnval == JFileChooser.APPROVE_OPTION) {
            showImage1.setFile(fichier.getSelectedFile());
            String pathFichier = showImage1.getFile().getAbsolutePath();
            jLabelSelect.setText(pathFichier);

            showImage1.loadImage();
        }
    }//GEN-LAST:event_jButtonSelectFileMouseClicked

    public Integer sendImage() {
        if (this.idUtlisateur != null) {
            return this.sendImage(this.idUtlisateur, null);
        }
        return null;
    }

    public Integer sendImage(Integer idUtlisateur) {
        if (idUtlisateur != null) {
            return this.sendImage(idUtlisateur, null);
        }
        return null;
    }

    public Integer sendImage(Integer idUtilisateur, Integer idMedia) {
        Integer create = null;

        if (fr.karim.connexion.DaoSIO.getInstance().connexionActive()) {

            if (showImage1.getStream() != null && showImage1.getFile() != null) {
                if (showImage1.getFile().length() <= 3000000) {

                    String filename = Helpers.getFileNameWithoutExtension(showImage1.getFile());
                    String extention = FilenameUtils.getExtension(showImage1.getFile().getAbsolutePath());

                    String size = Long.toString(showImage1.getFile().length());

                    if (idUtilisateur != null && idMedia != null) {
                        create = fr.karim.connexion.DaoSIO.getInstance().uplodImage(idMedia, idUtilisateur, filename, extention, (size != null ? size : "0"), showImage1.getStream(), showImage1.getFile());
                    } else if (idUtilisateur != null) {
                        create = fr.karim.connexion.DaoSIO.getInstance().uplodImage(idUtilisateur, filename, extention, (size != null ? size : "0"), showImage1.getStream(), showImage1.getFile());
                    }
                } else {
                    jLabelSuccess.setForeground(Color.orange);
                    jLabelSuccess.setText("Image trop lourde !!");
                    return create;
                }
            } else {

                if (idUtilisateur != null) {
                    
                    if(!Utilisateur.getInstance().getEstConnecte()){
                        create = fr.karim.connexion.DaoSIO.getInstance().uplodImage(idUtilisateur);
                    }
                    
                } else {
                    JOptionPane.showMessageDialog(null, Message.MESSAGE_NOT_CONNECT, Message.TITLE_MESSAGE_NOT_CONNECT, JOptionPane.ERROR_MESSAGE);
                }
                // jLabelSuccess.setForeground(Color.red);
                // jLabelSuccess.setText("Veuillez sélectionner une image !!");
            }
        } else {
            jLabelSuccess.setText("La connexion n'est pas active");
            return create;
        }

        if (create != null && create == 1) {
            jLabelSuccess.setForeground(Color.green);
            jLabelSuccess.setText("Image enregistrée !");
        } else {
            jLabelSuccess.setForeground(Color.red);
            jLabelSuccess.setText("Echec de l'enregistrement !");
        }
        
        return create;
    }

    public ShowImage getShowImage1() {
        return showImage1;
    }

    public void setShowImage1(ShowImage showImage1) {
        this.showImage1 = showImage1;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSelectFile;
    private javax.swing.JLabel jLabelSelect;
    private javax.swing.JLabel jLabelSuccess;
    private com.karimandco.image.ShowImage showImage1;
    // End of variables declaration//GEN-END:variables
}
